0.3.0: (2015-08-16)
Features:
 - Ability to hide individual background layers, or OBJs
 - Ability to mute individual audio channels
 - Palette viewer and exporter
 - Volume control
 - More shortcuts are editable (e.g. quick save/load)
 - Rewind now shows the frame after rewinding
 - Import/Export of GameShark/Action Replay snapshots
 - Add "Step backwards" item for single increment rewind
 - Deadzone estimation for game controllers
 - Analog inputs can be used for shortcuts
 - Menu items for specific solar sensor brightness levels
 - Remappable controls for tilt and gyroscope sensors
 - Status messages for actions taken while a game is running (e.g. save/load state)
 - Memory inspector
 - Screensaver can now be suspended while a game is running
 - Load/save the most recent savestate slot
 - Support varible speed (PWM) rumble
 - Ability to cap fast forward speed
 - Finer control over FPS target
 - Holdable shortcut for rewinding one frame at a time
 - Ability to boot directly into the BIOS
 - Preliminary support for yanking out the game pak while a game is running
 - Thumb-drive mode by putting a file called portable.ini in the same folder
 - Configurable display driver, between software and OpenGL
 - Undo-able savestate loading and saving
 - Controller profiles now store shortcut settings
 - Default controller profiles for several common controllers
 - Libretro now supports BIOS, rumble and solar sensor
 - Implement BIOS call Stop, for sleep mode
 - Automatically load patches, if found
 - Improved video synchronization
 - Configurable audio output sample rate
Bugfixes:
 - ARM7: Fix SWI and IRQ timings
 - ARM7: Fix Thumb MUL timing
 - ARM7: Fix timing of multiplies to use N cycles
 - ARM7: ARMHotplugDetach should call deinit
 - Debugger: Fix use-after-free in breakpoint clearing code
 - GBA: Fix crash if a 512kb flash save is loaded when a game has a 1Mb flash override
 - GBA: Cap audio FIFO read size during deserialization
 - GBA: Check for corrupted savestates when loading
 - GBA: Check for improperly sized savestates when loading
 - GBA: Check for savestates made from differently sized ROMs
 - GBA: Fix calls to endian-independent loadstores
 - GBA: Fix timing of reading from timer registers
 - GBA: Ensure cycles never go negative
 - GBA Audio: Force audio FIFOs to 32-bit
 - GBA Audio: Fix audio pitch changing when adjusting buffer size
 - GBA Audio: Fix sample order in audio channel 3
 - GBA Audio: Fix 8-bit writes to audio channel 3 frequency
 - GBA Cheats: Fix Pro Action Replay and GameShark issues when used together
 - GBA Memory: Improve Thumb open bus behavior
 - GBA Memory: Fix potential DMA issue when loading a savestate
 - GBA Memory: Fix load/store multiple video memory waitstates
 - GBA SIO: Fix reseting when there are SIO devices attached
 - GBA Video: Blended sprites should never have other effects applied
 - GBA Video: Fix out-of-bounds tiles in mosaic
 - GBA Video: Fix windows not affecting sprites
 - GBA Video: Prevent tiles < 512 from being used in modes 3 - 5
 - GBA Video: Fix timing on first scanline
 - Qt: Better cleanup when a game crashes
 - Qt: Fix open ROM dialog filtering for archive formats
 - Qt: Cap the maximum number of multiplayer windows
 - Qt: Fix maximum year in sensor override
 - Qt: Fix window being too tall after exiting fullscreen
 - Qt: Fix a missing va_end call in the log handler lambda within the GameController constructor
 - Qt: Fix analog buttons not getting unmapped
 - Qt: Fix passing command line options
 - Qt: Fix crashes on Windows by using using QMetaObject to do cross-thread calls
 - SDL: Fix SDL build when OpenGL is missing
 - Util: Allow loading IPS patches that grow the ROM
 - VFS: Fix resource leaks if some allocations fail
 - VFS: Fix line-reading to return proper values
 - Video: Fix an issue with very long filenames
 - Util: Fix formatting of floats
Misc:
 - All: Add --help flag for command line programs
 - All: Fix sanitize-deb script to set file permissions properly if run as (fake)root
 - All: Enable static linking for Windows
 - All: Enable static linking for OS X
 - All: Threads are now named
 - All: Proper handling of Unicode file paths
 - ARM7: Add emulation for Undefined CPU mode
 - ARM7: Reduce the size of the Thumb instruction table
 - GBA: Add status log level
 - GBA: GBARewind now returns how many states it has rewound
 - GBA: SIO logging layer
 - GBA BIOS: Stub out SoundBias
 - GBA: More accurate cycle estimation for ROM prefetch and flash save chips
 - GBA: Don't include GBACLIDebugger struct unless needed
 - GBA: Savedata is now synced shortly after data finishes being written
 - GBA: Process multiple timer events at once, if necessary
 - GBA Audio: Implement audio reset for channels A/B
 - GBA Audio: Process multiple audio events at once, if necessary
 - GBA Hardware: Backport generic RTC source into core
 - GBA Input: Allow axes and buttons to be mapped to the same key
 - GBA Memory: Run multiple DMAs in a tight loop if they all occur before present
 - GBA SIO: Add a dummy driver for Normal mode
 - GBA Thread: Add functionality for running callbacks on the GBA thread
 - GBA Thread: Split GBASync into a separate file
 - GBA Video: Refactor software renderer into separate files
 - GBA Video: Slightly optimize mode 0 mosaic rendering
 - Debugger: Free watchpoints in addition to breakpoints
 - Qt: Handle saving input settings better
 - Qt: Move GL frame drawing back onto its own thread
 - Qt: Fast forward (held) option moved from Other to Emulation menu
 - Qt: Show version info in window title
 - Qt: Migrate multiplayer window handling into GBAApp
 - Qt: Unified file opening and saving with last location
 - Qt: Fix windows being resizable when they shouldn't have been
 - Qt: Only hide cursor in full screen
 - Qt: Replace pause-after-frame mutex with an atomic
 - Qt: Add application icon and XDG desktop files
 - Qt: Rename "Fullscreen" to "Toggle fullscreen"
 - Qt: Don't save window size when entering fullscreen
 - Qt: Make the default fullscreen binding for Windows be Alt-Enter
 - Qt: Gamepads can now have both buttons and analog axes mapped to the same key
 - Qt: Increase usability of key mapper
 - Qt: Show checkmark for window sizes
 - Qt: Set window path to loaded ROM
 - Perf: Ability to load savestates immediately on launch
 - SDL: Properly check for initialization
 - SDL: Clean up initialization functions
 - SDL: Clean up GL context
 - Util: Allow disabling the threading code entirely
 - VFS: Add sync method to force syncing with backing

0.2.1: (2015-05-13)
Bugfixes:
 - All: Fix sanitize-deb script not cleaning up after itself
 - All: Fix dependencies for libavcodec on Debian-derived platforms
 - ARM7: Handle writeback for PC in addressing modes 2 and 3
 - ARM7: Make illegal instruction decoding consistent between ARM and Thumb
 - ARM7: Fix ARM multiply instructions when PC is a destination register
 - Debugger: Fix use-after-free in breakpoint clearing code
 - Debugger: Fix boundary conditions in tab completion
 - GBA: Fix timers not updating timing when writing to only the reload register
 - GBA: Fix rewind boundary conditions
 - GBA: Add initial I/O register settings for background matrix registers
 - GBA: Fix hang when loading a savestate if sync to video is enabled
 - GBA: Handle out-of-bounds I/O access
 - GBA: Fix bounds-checking on EEPROM access
 - GBA Audio: FIFOs should not poll DMAs that are not scheduled for audio
 - GBA BIOS: Initialize a variable that may be uninitialized in very rare cases
 - GBA Memory: Allow SRAM to be 64kB
 - GBA Memory: Fix 32-bit loads from unaddress cartridge space
 - GBA Memory: Fix jumping to invalid memory when switching from Thumb to ARM
 - GBA Video: Fix second frame mode 5
 - Perf: Fix race condition if a game crashes immediately on start
 - Qt: Fix Display object leak when closing a window
 - Qt: Fix .deb dependencies
 - Qt: Fix "QOpenGLContext::swapBuffers() called with non-exposed window" warning
 - Qt: Fix window not regaining focus after exiting savestate window
 - Qt: Fix regression where video would not record if the game had already started
 - Qt: Fix potential crash if a gamepad causes focus to change
 - Qt: Fix controller axis querying
 - Qt: Fix multiplayer windows opening as the wrong size
 - Qt: Fix controllers sometimes not loading the right profile
 - SDL: Fix boundary conditions for joystick adjustments
 - SDL: Allocate properly sized input maps
 - SDL: Fix potential build issues when Qt and SDL2 are in use
 - Util: Fix resource leak in UTF-8 handling code
 - Util: Fix a null-pointer issue when attempting to delete a key
 - VFS: Fix resource leaks if some allocations fail
 - Video: Fix an issue with very long filenames
Misc:
 - GBA Memory: Soft-crash if jumping past the end of a ROM
 - Qt: Show multiplayer numbers in window title
 - Qt: Solar sensor can have shortcuts set

0.2.0: (2015-04-03)
Features:
 - Support for gamepad axes, e.g. analog sticks or triggers
 - Add scale presets for up to 6x
 - Settings window
 - Bilinear resampling option
 - Add option to skip BIOS start screen
 - List of recently opened games
 - Support for games using the Solar Sensor
 - Better audio resampling via blip-buf
 - Game Pak overrides dialog for setting savetype and sensor values
 - Support for games using the tilt sensor
 - Remappable shortcuts for keyboard and gamepad
 - Rewinding of emulation
 - Implemented BIOS routines SoftReset, RegisterRamReset, Diff8bitUnFilterWram, Diff8bitUnFilterVram, and Diff16bitUnFilter
 - Support IPv6
 - Save directory of last loaded file
 - Support BPS patches
 - Automatically detect and optimize out idle loops
 - Configurable game overrides
 - Support loading 7-Zip files
 - Drag and drop game loading
 - Cheat code support
 - Runtime configurable audio driver
 - Libretro core for use with RetroArch and other front-ends
 - Controller profiles for setting different bindings for different controllers
 - Ability to lock aspect ratio
 - Local link cable support
 - Ability to switch which game controller is in use per instance
 - Ability to prevent opposing directional input
 - Warning dialog if an unimplemented BIOS feature is called
 - Debugger: Add CLI "frame", frame advance command
 - Debugger: Add CLI functions for writing to memory
 - Debugger: Add CLI functions for examining memory regions
 - Debugger: Add CLI function for writing a register
Bugfixes:
 - ARM7: Extend prefetch by one stage
 - ARM7: Fix cycle counting for loads
 - Debugger: Disassembly now lists PSR bitmasks (fixes #191)
 - GBA: Fix savestate loading of DISPSTAT and WAITCNT registers
 - GBA: Initialize gba.sync to null
 - GBA: Fix timer initialization
 - GBA Audio: Support 16-bit writes to FIFO audio
 - GBA Audio: Audio buffer sizes are now correct sizes for both sample rates
 - GBA BIOS: Fix BIOS prefetch after returning from an IRQ
 - GBA BIOS: Fix BIOS prefetch after reset
 - GBA BIOS: Prevent CpuSet and CpuFastSet from using BIOS addresses as a source (fixes #184)
 - GBA BIOS: Fix BIOS decompression routines with invalid source addresses
 - GBA Memory: Fix alignment of open bus 8- and 16-bit loads
 - GBA Memory: Fix I cycles that had been moved to ARM7 core
 - GBA Memory: Fix cycle counting for 32-bit load/stores
 - GBA RR: Fix fallthrough error when reading tags from a movie
 - GBA Thread: Fix possible hang when loading an archive
 - GBA Thread: Fix possible deadlock in video sync
 - Perf: Fix crash when the GBA thread fails to start
 - Qt: Fix crash starting a GDB stub if a game isn't loaded
 - Qt: Fix crash when adjusting settings after closing a game
 - Qt: Fix crash when starting GDB stub after closing a game
 - Qt: Fix patch loading while a game is running
 - Qt: Fix crash when loading a game after stopping GDB server
 - Qt: Pause game while open file dialogs are open (fixes #6 on GitHub)
 - Qt: Fix crash when attempting to pause if a game is not running
 - SDL: Properly clean up if a game doesn't launch
 - Util: Fix sockets on Windows
Misc:
 - All: Enable link-time optimization
 - Debugger: Watchpoints now work on STM/LDM instructions
 - Debugger: Clean up GDB stub network interfacing
 - Debugger: Simplify debugger state machine to play nicer with the GBA thread loop
 - Debugger: Merge Thumb BL instructions when disassembling
 - Debugger: Clean up debugger interface, removing obsolete state (fixes #67)
 - Debugger: Watchpoints now report address watched (fixes #68)
 - Debugger: Add support for soft breakpoints
 - Debugger: Make I/O register names be addresses instead of values
 - Debugger: Rename read/write commands
 - GBA: Improve accuracy of event timing
 - GBA: Add API for getting Configuration structs for overrides and input
 - GBA: Refactor gba-sensors and gba-gpio into gba-hardware
 - GBA: Refactor gba directory, dropping gba- prefix and making supervisor directory
 - GBA: Move A/V stream interface into core
 - GBA: Savestates now take into account savedata state machines (fixes #109)
 - GBA Audio: Change internal audio sample buffer from 32-bit to 16-bit samples
 - GBA Memory: Simplify memory API and use fixed bus width
 - GBA Thread: Make GBASyncWaitFrameStart time out
 - GBA Video: Start video at the last scanline instead of the first
 - Qt: Optimize logo drawing
 - Qt: Move frame upload back onto main thread
 - Qt: Remember window position
 - Qt: Double-clicking on the window toggles full screen
 - Util: Use proper locale for reading and writing float values

0.1.1: (2015-01-24)
Bugfixes:
 - ARM7: Fix LDM writeback to a register already written
 - GBA: Fix timers 2 and 3 updating incorrectly
 - GBA Audio: Make larger buffer sizes than 2048 actually work properly
 - GBA Audio: Fix GB audio channels being too quiet (fixes #159)
 - GBA Audio: Properly initialize audio FIFO channels
 - GBA BIOS: Fix HLE Lz77 and RL functions to properly account for width and invalid addresses
 - GBA BIOS: Fix BIOS prefetch after returning from a SWI
 - GBA BIOS: Fix LZ77UnCompVram to use 16-bit loads from decompressed memory
 - GBA BIOS: Fix HuffUnComp to work when games pass an invalid bit length
 - GBA BIOS: Fix GetBiosChecksum to return the value of a real GBA, regardless of used BIOS
 - GBA BIOS: Fix HuffUnComp boundary conditions
 - GBA Memory: Don't call into GPIO write calls if GPIO devices are absent
 - GBA Memory: Properly initialize 1 Mb flash, and add debug logging
 - GBA Memory: Filter out top nybble of DMA addresses
 - GBA Memory: Properly bounds-check VRAM accesses
 - GBA Memory: Fix initial DMA state
 - GBA Thread: Allow halted games to exit cleanly
 - GBA Video: Fix blend issues with obscured middle layers
 - GBA Video: Fix windows not disabling target 1 appropriately (fixes #161)
 - GBA Video: Fix sprite mis-ordering behavior in some cases (fixes #168)
 - GBA Video: Fix window interactions with 16-color mode 0 mosaic
 - GBA Video: Fix sprite boundary conditions with mosaic
 - GBA Video: Fix mode 0 being able to read tiles above appropriate tile range
 - Qt: Fix issue with set frame sizes being the wrong height
 - Qt: Fix emulator crashing when full screen if a game is not running
 - Qt: Fix window focus issues
 - Qt: Properly set default video recording settings
 - Qt: Fix a race condition when a game crashes immediately
 - Qt: Fix some cases where key mapping can break if focus is adjusted
 - Qt: Fix crash if a game pauses before any frames are shown
 - Debugger: Negative PC-relative loads now properly subtract the offset
 - Debugger: Align PC-relative loads in Thumb
 - Debugger: Fix watchpoints triggering too late
 - Debugger: Fix binary print putting spaces between digits
 - Video: Ensure FFmpeg encoder has audio frames
 - Video: Fix uncompressed PCM audio recording
 - Video: Fix FFmpeg crashing when the file extension is wrong
 - Util: Fix SOCKET_FAILED macro
Misc:
 - GBA: Exit cleanly on FATAL if the port supports it
 - GBA Memory: Implement 16- and 32-bit loads from SRAM
 - Qt: Disable sync to video by default
 - Qt: Handle a game crash without crashing
 - Qt: Set default log level to FATAL, ERROR and WARN
 - Qt: Clarify some phrasing in the menus
 - Qt: Clear active buttons when focus is lost

0.1.0: (2014-12-13)
 - Initial release
